name: CI-CD
on:
  workflow_dispatch:
  push:
    branches:
    - feature/*
    - develop
    - release/*
    - hotfix/*
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
    - develop

jobs:
  get_increment_strategies:
    runs-on: ubuntu-latest
    outputs:
      config_file: ${{ steps.get_increment_strategies.outputs.config_file }}
      checkout_sha: ${{ steps.get_increment_strategies.outputs.checkout_sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.EDGARPAT }}
          fetch-depth: '0'
      - name: get_increment_strategies
        id: get_increment_strategies
        run: |
          get_tag() {
              local commit=$1
              # Get the tag for the commit, or return an empty string if none
              git describe --tags --exact-match "$commit" 2>/dev/null || echo ""
          }
          echo $GITHUB_EVENT_NAME
          file_path="version_config_files/release_major_config.yaml"
          sha_to_use=$GITHUB_SHA
          echo "default sha is: $GITHUB_SHA"
          prev_sha=$(git log -n 2 --pretty=format:"%H" | tail -n 1)
          if [[ "$GITHUB_EVENT_NAME" != "pull_request" ]]
          then
            head_tag=$(get_tag "$GITHUB_SHA" )
            prev_tag=$(get_tag "prev_sha")
            actual_branch=$(git symbolic-ref --short HEAD)
            echo "actual tag is: $head_tag"
            echo "previous tag is: $prev_tag"
            echo "actual branch is: $actual_branch"
            tag_to_compare=${head_tag:-$prev_tag}
            echo "tag to use is: $tag_to_compare"
            actual_branch_regex="^releases?[/-].+"
            prev_tag_regex="^[[:digit:]]+\.0+\.[[:digit:]]+$|(hot)?fix(es)?"
            
            if [[ $tag_to_compare =~ $prev_tag_regex ]] && [[ $actual_branch =~ $actual_branch_regex ]]
            then
                file_path="version_config_files/release_patch_config.yaml"
                sha_to_use=$prev_sha
            fi
          fi
          echo "Config file to use: $file_path"
          echo "commit SHA to checkout: $sha_to_use"
          echo "config_file=$file_path" >> $GITHUB_OUTPUT
          echo "checkout_sha=$sha_to_use" >> $GITHUB_OUTPUT

  calculate_version:
    uses: ./.github/workflows/calculate-version.yaml
    needs: [get_increment_strategies]
    secrets: inherit
    with:
      VERSION_USE_CONFIG_FILE: true
      WITH_REPO_TAGGING: true
      VERSION_CONFIG_FILE: ${{needs.get_increment_strategies.outputs.config_file}}
      GIT_CHECKOUT_REF: ${{needs.get_increment_strategies.outputs.checkout_sha}}
